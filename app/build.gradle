plugins {
    id 'com.android.application'
}

def app_android = this.getRootProject().ext.app_android;
def app_dependencies = this.rootProject.ext.app_dependencies;

android {
    compileSdkVersion app_android.compileSdkVersion
    buildToolsVersion app_android.buildToolsVersion

    defaultConfig {
        applicationId app_android.applicationId
        minSdkVersion app_android.minSdkVersion
        targetSdkVersion app_android.targetSdkVersion
        versionCode app_android.versionCode
        versionName app_android.versionName
        testInstrumentationRunner app_android.testInstrumentationRunner

        //组件化中跨模块交互的数据传参
        buildConfigField("boolean", "isRelease", String.valueOf(isRelease))

        javaCompileOptions {
            annotationProcessorOptions {
                // project.getName() == app
                arguments = [moduleName: project.getName(), packageNameForAPT: packageNameForAPT]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'

    // 循环引入第三方库
    app_dependencies.each {k, v ->
        // if (k != "aa" && v != "cc") {}
        implementation v
    }

    // 公共基础库
    implementation project(":common")

    //ARouter的注解处理器
    implementation project(path: ':arouter_compiler')

    //ARouter专用的注解模块
    implementation project(path: ':arouter_annotation')

    // 如果是集成化模式，做发布版本时。各个模块都不能独立运行了
    if (isRelease) {
        // 进if，集成，融为一体（order，personal）

        // 订单模块
        implementation project(":order")

        // 个人中心模块
        implementation project(":personal")
    }
}